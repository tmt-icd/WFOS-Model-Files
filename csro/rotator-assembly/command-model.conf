subsystem = WFOS
component = rotator

description = "Instrument Rotator Commands."

receive = [
    {
        name            = debug
        description     = """Change the assembly debug message level. (engineering)

    The assembly will log all messages that correspond to the current debug message level as well as all lower levels (e.g. if the current debug message level is INFO, then all INFO, WARN and ERROR messages will be logged). Below are the debug message levels in descending order.
    <ul>
    <li>    \b DEBUG: extra details as messages are processed   
    <li>    \b INFO : connections and command status
    <li>    \b WARN(ing) : unexpected events/messages/etc
    <li>    \b ERROR: failed to do something
    </ul>

    *Friendly Command.*
    
    Precondition:
    <ul>
    <li> state.cmd != UNINITIALIZED
    </ul>
    Execution:
    <ul>
    <li> none
    </ul>
    At Completion:
    <ul>
    <li> state.debug = {input debug}
    </ul>"""
        args = [
            {
                name        = debug
                description = target debug level
                enum        = [ DEBUG, INFO, WARN, ERROR ] 
            }
        ]
        requiredArgs = [ debug ]
    }

    {
        name = init
        description     = """Prepares the assembly for operation and reads configuration files. (engineering)

This command will internally trigger a stop if required.

If configName and configVersion are not specified in the input, then the default configuration name and version will be used. If only configName is specified in the input, then the default version for the specified configName will be used. If only configVersion is specified in the input, then an error is returned.

This command will reset default conditions of any internal state variables.

This command will not cause the rotator to move once (apart from the initial stop).

*Discrete Command.*
    
Precondition:
<ul>
<li> none
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = false
</ul>
At Completion:
<ul>
<li> state.cmd = READY
</ul>"""
        args = [
            {
                name        = configName 
                description = "Name of the configuration file to get from the TMT Configuration Service"
                type        = string
            }
            {
                name        = configVersion
                description = "Version of the configuration file to get from the TMT Configuration Service"
                type        = string 
            }
        ]
    }

    {
        name = config
        description     = """Reads configuration files. (engineering)

If configName and configVersion are not specified in the input, then the default configuration name and version will be used. If only configName is specified in the input, then the default version for the specified configName will be used. If only configVersion is specified in the input, then an error is returned.

This command does not otherwise alter the state of the assembly (i.e., unlike init, this command will not reset internal state variables).

*Discrete Command.*
    
Precondition:
<ul>
<li> state.cmd = READY
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = false
</ul>
At Completion:
<ul>
<li> state.cmd = READY
</ul>"""
        args = [
            {
                name        = configName 
                description = "Name of the configuration file to get from the TMT Configuration Service"
                type        = string
            }
            {
                name        = configVersion
                description = "Version of the configuration file to get from the TMT Configuration Service"
                type        = string 
            }
        ]
    }

    {
        name = phasing
        description     = """Phase the rotator. 

When initially powered the brushless DC rotator motor phase must be established by the controller. This command initializes the phasing operation. Phasing must be established prior to a datum.

This command will internally trigger a stop if required.
 
*Discrete Command.*
 
Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = true
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> state.move = false
</ul>"""
    }

    {
        name = datum
        description     = """Datum the rotator. 

This command will internally trigger a stop if required.
 
*Discrete Command.*
 
Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = true
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> state.move = false
</ul>"""
    }

    {
        name = stop
        description = """Cancel the current discrete type command and stops the rotator.

*Discrete Command.*
  
Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> state.move = false
<li> state.select = SCIENCE | ENGINEERING | INTERMEDIATE
</ul>"""
    }

    {
        name = park
        description     = """Park the rotator by moving it to the safe maintenance/serving position.

This command will internally trigger a stop if required and then move the rotator to the park position as specified in the configuration file.

*Discrete Command.*

Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = true
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> state.move = false
</ul>"""
    }

    {
        name = test
        description     = """Test the assembly connections.  There is no movement. (engineering)

The assembly will reconnect to its HCD.

*Simple Command.*

Precondition:
<ul>
<li> state.cmd = READY
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = READY
</ul>"""
    }

    {
        name = move
        description = """Move to target rotation in FCRS<sub>WFOS</sub> coordinates and stop.

This is a low-level command to set specific rotator positions during debugging or daytime calibration. Under normal operations the rotator will be commanded by a continuous stream from the TCS.

WFOS has an integrated cable wrap hanging below the instrument that must follow the rotator, giving rise to the indicated rotator range. It is the responsibility of higher-level software subsystems to be aware of windup issues and command the rotator to the appropriate position within this range.

The rotator must be datumed, otherwise this command will fail.

*Discrete Command.*

Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = true
</ul>
At Completion:
<ul>
<li> state.cmd = READY
</ul>

"""
        requiredArgs = [rotation]
        args = [
            {
                name = rotation
                description = "Rotation angle (degrees)"
                type = double
                minimum = -270
                maximum = 270
            }
        ]
    }
    
    {
        name = follow
        description = """Activate rotator position following.

When the follow attribute is enabled, the rotator will begin to track the rotator angle published by the TCS in FCRS<sub>WFOS</sub> and/or offsets published by the NRTC (based on OIWFS measurements), depending on the values of the tcs and rtcOffset attributes.

When the tcs attribute is true, the rotator follows the instrumentRotatorAngle published by the tcs. If the attribute is set to false (or ommitted), it will not follow the TCS.

When the rtcOffset attribute is true, a continuously-varying angular error stream published by the NRTC (inst, based on OIWFS measurements) is applied. If the tcs attribute was set, these offsets are added to the TCS-commanded rotator angles. If the tcs attribute is not set, these offsets are added to the most recently commanded position (due to previously-followed TCS demands, or result of a move command). Note that inst is provided in FCRS<sub>174.5</sub> coordinates, and is converted into FCRS<sub>WFOS</sub> coordinates internally prior to being applied. If the attribute is false (or ommitted), it will not apply offsets from the NRTC.

The rotator must be datumed, otherwise this command will fail.

*Discrete Command.*

Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = CONTINUOUS
</ul>

"""
        requiredArgs = [follow]
        args = [
            {
                name = follow
                description = "Begin following if true."
                type = boolean
            }
            {
                name = tcs
                description = "Follow TCS if true."
                type = boolean
            }
            {
                name = rtcOffset
                description = "Apply RTC offsets if true."
                type = boolean
            }
        ]
    }

    {
    name            = shutdown
    description     = """Shutdown the assembly. (engineering)

This command is used to properly shutdown the assembly in preparation for turning off the OIWFS Component Controller server.

*Simple Command.*
 
Precondition:
<ul>
<li> none
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = UNINITIALIZED
</ul>"""
    }
]
